// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Query tests "DECODE_REQUEST" matches snapshot 1`] = `
Object {
  "data": Object {
    "decodeRequest": Object {
      "chain_address": "string",
      "cltv_delta": 1000,
      "description": "string",
      "description_hash": "string",
      "destination": "string",
      "destination_node": Object {
        "node": Object {
          "alias": "string",
        },
      },
      "expires_at": "2011-10-05T14:48:00.000Z",
      "id": "string",
      "probe_route": Object {
        "route": Object {
          "confidence": 1000,
          "fee": 1000,
          "fee_mtokens": "string",
          "hops": Array [
            Object {
              "channel": "string",
              "channel_capacity": 1000,
              "fee": 1000,
              "fee_mtokens": "string",
              "forward": 1000,
              "forward_mtokens": "string",
              "node": Object {
                "node": Object {
                  "alias": "string",
                },
              },
              "public_key": "string",
              "timeout": 1000,
            },
          ],
          "mtokens": "string",
          "safe_fee": 1000,
          "safe_tokens": 1000,
          "timeout": 1000,
          "tokens": 1000,
        },
      },
      "routes": Array [
        Array [
          Object {
            "base_fee_mtokens": "10000",
            "channel": "string",
            "cltv_delta": 1000,
            "fee_rate": 1000,
            "public_key": "string",
          },
        ],
      ],
      "tokens": 1000,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_BACKUPS" matches snapshot 1`] = `
Object {
  "data": Object {
    "getBackups": "{\\"backup\\":\\"string\\",\\"channels\\":{\\"backup\\":\\"string\\",\\"transaction_id\\":\\"string\\",\\"transaction_vout\\":1}}",
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_CHAIN_TRANSACTIONS" matches snapshot 1`] = `
Object {
  "data": Object {
    "getChainTransactions": Array [
      Object {
        "block_id": "string",
        "confirmation_count": 1000,
        "confirmation_height": 1000,
        "created_at": "2011-10-05T14:48:00.000Z",
        "fee": 1000,
        "id": "string",
        "output_addresses": Array [
          "string",
          "string",
        ],
        "tokens": 1000,
      },
      Object {
        "block_id": "string",
        "confirmation_count": 1000,
        "confirmation_height": 1000,
        "created_at": "2011-10-05T14:48:00.000Z",
        "fee": 1000,
        "id": "string",
        "output_addresses": Array [
          "string",
          "string",
        ],
        "tokens": 1000,
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_CHANNEL_FEES" matches snapshot 1`] = `
Object {
  "data": Object {
    "getChannels": Array [
      Object {
        "id": "100x1x1",
        "partner_fee_info": Object {
          "node_policies": null,
          "partner_node_policies": Object {
            "base_fee_mtokens": "2000",
            "cltv_delta": 1000,
            "fee_rate": 1000,
            "max_htlc_mtokens": "10000",
            "min_htlc_mtokens": "10000",
          },
        },
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "color": "string",
          },
        },
        "partner_public_key": "string",
        "transaction_id": "string",
        "transaction_vout": 1000,
      },
      Object {
        "id": "100x1x1",
        "partner_fee_info": Object {
          "node_policies": null,
          "partner_node_policies": Object {
            "base_fee_mtokens": "2000",
            "cltv_delta": 1000,
            "fee_rate": 1000,
            "max_htlc_mtokens": "10000",
            "min_htlc_mtokens": "10000",
          },
        },
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "color": "string",
          },
        },
        "partner_public_key": "string",
        "transaction_id": "string",
        "transaction_vout": 1000,
      },
      Object {
        "id": "100x1x1",
        "partner_fee_info": Object {
          "node_policies": null,
          "partner_node_policies": Object {
            "base_fee_mtokens": "2000",
            "cltv_delta": 1000,
            "fee_rate": 1000,
            "max_htlc_mtokens": "10000",
            "min_htlc_mtokens": "10000",
          },
        },
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "color": "string",
          },
        },
        "partner_public_key": "string",
        "transaction_id": "string",
        "transaction_vout": 1000,
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_CHANNELS" matches snapshot 1`] = `
Object {
  "data": Object {
    "getChannels": Array [
      Object {
        "bosScore": null,
        "capacity": 1000,
        "channel_age": 123356,
        "commit_transaction_fee": 1000,
        "commit_transaction_weight": 1000,
        "id": "100x1x1",
        "is_active": true,
        "is_closing": true,
        "is_opening": true,
        "is_partner_initiated": false,
        "is_private": true,
        "is_static_remote_key": true,
        "local_balance": 1000,
        "local_reserve": 1000,
        "partner_fee_info": Object {
          "node_policies": null,
          "partner_node_policies": Object {
            "base_fee_mtokens": "2000",
            "cltv_delta": 1000,
            "fee_rate": 1000,
          },
        },
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "capacity": "1000",
            "channel_count": 1000,
            "color": "string",
            "updated_at": "2011-10-05T14:48:00.000Z",
          },
        },
        "partner_public_key": "string",
        "pending_resume": Object {
          "incoming_amount": 0,
          "incoming_tokens": 0,
          "outgoing_amount": 1,
          "outgoing_tokens": 1000,
          "total_amount": 1,
          "total_tokens": 1000,
        },
        "received": 1000,
        "remote_balance": 1000,
        "remote_reserve": 1000,
        "sent": 1000,
        "time_offline": 1,
        "time_online": 1,
        "transaction_id": "string",
        "transaction_vout": 1000,
        "unsettled_balance": 1000,
      },
      Object {
        "bosScore": null,
        "capacity": 1000,
        "channel_age": 123356,
        "commit_transaction_fee": 1000,
        "commit_transaction_weight": 1000,
        "id": "100x1x1",
        "is_active": true,
        "is_closing": true,
        "is_opening": true,
        "is_partner_initiated": true,
        "is_private": true,
        "is_static_remote_key": true,
        "local_balance": 1000,
        "local_reserve": 1000,
        "partner_fee_info": Object {
          "node_policies": null,
          "partner_node_policies": Object {
            "base_fee_mtokens": "2000",
            "cltv_delta": 1000,
            "fee_rate": 1000,
          },
        },
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "capacity": "1000",
            "channel_count": 1000,
            "color": "string",
            "updated_at": "2011-10-05T14:48:00.000Z",
          },
        },
        "partner_public_key": "string",
        "pending_resume": Object {
          "incoming_amount": 0,
          "incoming_tokens": 0,
          "outgoing_amount": 1,
          "outgoing_tokens": 1000,
          "total_amount": 1,
          "total_tokens": 1000,
        },
        "received": 1000,
        "remote_balance": 1000,
        "remote_reserve": 1000,
        "sent": 1000,
        "time_offline": 1,
        "time_online": 1,
        "transaction_id": "string",
        "transaction_vout": 1000,
        "unsettled_balance": 1000,
      },
      Object {
        "bosScore": null,
        "capacity": 1000,
        "channel_age": 123356,
        "commit_transaction_fee": 1000,
        "commit_transaction_weight": 1000,
        "id": "100x1x1",
        "is_active": true,
        "is_closing": true,
        "is_opening": true,
        "is_partner_initiated": false,
        "is_private": true,
        "is_static_remote_key": true,
        "local_balance": 1000,
        "local_reserve": 1000,
        "partner_fee_info": Object {
          "node_policies": null,
          "partner_node_policies": Object {
            "base_fee_mtokens": "2000",
            "cltv_delta": 1000,
            "fee_rate": 1000,
          },
        },
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "capacity": "1000",
            "channel_count": 1000,
            "color": "string",
            "updated_at": "2011-10-05T14:48:00.000Z",
          },
        },
        "partner_public_key": "string",
        "pending_resume": Object {
          "incoming_amount": 0,
          "incoming_tokens": 0,
          "outgoing_amount": 1,
          "outgoing_tokens": 1000,
          "total_amount": 1,
          "total_tokens": 1000,
        },
        "received": 1000,
        "remote_balance": 1000,
        "remote_reserve": 1000,
        "sent": 1000,
        "time_offline": 1,
        "time_online": 1,
        "transaction_id": "string",
        "transaction_vout": 1000,
        "unsettled_balance": 1000,
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_CLOSED_CHANNELS" matches snapshot 1`] = `
Object {
  "data": Object {
    "getClosedChannels": Array [
      Object {
        "capacity": 10000,
        "channel_age": 0,
        "close_confirm_height": 123,
        "close_transaction_id": "fghijk",
        "final_local_balance": 123,
        "final_time_locked_balance": 123,
        "id": "id",
        "is_breach_close": false,
        "is_cooperative_close": true,
        "is_funding_cancel": false,
        "is_local_force_close": false,
        "is_remote_force_close": false,
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "capacity": "1000",
            "channel_count": 1000,
            "color": "string",
            "updated_at": "2011-10-05T14:48:00.000Z",
          },
        },
        "partner_public_key": "abcdef",
        "transaction_id": "123",
        "transaction_vout": 1,
      },
      Object {
        "capacity": 10000,
        "channel_age": 0,
        "close_confirm_height": 123,
        "close_transaction_id": "fghijk",
        "final_local_balance": 123,
        "final_time_locked_balance": 123,
        "id": "id",
        "is_breach_close": false,
        "is_cooperative_close": true,
        "is_funding_cancel": false,
        "is_local_force_close": false,
        "is_remote_force_close": false,
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "capacity": "1000",
            "channel_count": 1000,
            "color": "string",
            "updated_at": "2011-10-05T14:48:00.000Z",
          },
        },
        "partner_public_key": "abcdef",
        "transaction_id": "123",
        "transaction_vout": 1,
      },
      Object {
        "capacity": 10000,
        "channel_age": 0,
        "close_confirm_height": 123,
        "close_transaction_id": "fghijk",
        "final_local_balance": 123,
        "final_time_locked_balance": 123,
        "id": "id",
        "is_breach_close": false,
        "is_cooperative_close": true,
        "is_funding_cancel": false,
        "is_local_force_close": false,
        "is_remote_force_close": false,
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "capacity": "1000",
            "channel_count": 1000,
            "color": "string",
            "updated_at": "2011-10-05T14:48:00.000Z",
          },
        },
        "partner_public_key": "abcdef",
        "transaction_id": "123",
        "transaction_vout": 1,
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_FEE_HEALTH" matches snapshot 1`] = `
Object {
  "data": Object {
    "getFeeHealth": Object {
      "channels": Array [
        Object {
          "id": "100x1x1",
          "mySide": Object {
            "base": "0",
            "baseOver": false,
            "baseScore": 0,
            "rate": 0,
            "rateOver": false,
            "rateScore": 0,
            "score": 0,
          },
          "partner": Object {
            "node": Object {
              "alias": "string",
            },
          },
          "partnerSide": Object {
            "base": "2",
            "baseOver": true,
            "baseScore": 98,
            "rate": 1000,
            "rateOver": true,
            "rateScore": 50,
            "score": 74,
          },
        },
        Object {
          "id": "100x1x1",
          "mySide": Object {
            "base": "0",
            "baseOver": false,
            "baseScore": 0,
            "rate": 0,
            "rateOver": false,
            "rateScore": 0,
            "score": 0,
          },
          "partner": Object {
            "node": Object {
              "alias": "string",
            },
          },
          "partnerSide": Object {
            "base": "2",
            "baseOver": true,
            "baseScore": 98,
            "rate": 1000,
            "rateOver": true,
            "rateScore": 50,
            "score": 74,
          },
        },
        Object {
          "id": "100x1x1",
          "mySide": Object {
            "base": "0",
            "baseOver": false,
            "baseScore": 0,
            "rate": 0,
            "rateOver": false,
            "rateScore": 0,
            "score": 0,
          },
          "partner": Object {
            "node": Object {
              "alias": "string",
            },
          },
          "partnerSide": Object {
            "base": "2",
            "baseOver": true,
            "baseScore": 98,
            "rate": 1000,
            "rateOver": true,
            "rateScore": 50,
            "score": 74,
          },
        },
      ],
      "score": 37,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_LIQUID_REPORT" matches snapshot 1`] = `
Object {
  "data": Object {
    "getChannelReport": Object {
      "commit": 2000,
      "incomingPendingHtlc": 0,
      "local": 1000,
      "maxIn": 1000,
      "maxOut": 1000,
      "outgoingPendingHtlc": 3,
      "remote": 3000,
      "totalPendingHtlc": 3,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_MESSAGES" matches snapshot 1`] = `
Object {
  "data": Object {
    "getMessages": Object {
      "messages": Array [],
      "token": "string",
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_NETWORK_INFO" matches snapshot 1`] = `
Object {
  "data": Object {
    "getNetworkInfo": Object {
      "averageChannelSize": "1000",
      "channelCount": 123,
      "maxChannelSize": 456,
      "medianChannelSize": 789,
      "minChannelSize": 100,
      "nodeCount": 10000,
      "notRecentlyUpdatedPolicyCount": 10,
      "totalCapacity": "10000",
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_NODE withoutChannels" matches snapshot 1`] = `
Object {
  "data": Object {
    "getNode": Object {
      "node": Object {
        "alias": "string",
        "capacity": "1000",
        "channel_count": 1000,
        "color": "string",
        "updated_at": "2011-10-05T14:48:00.000Z",
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_NODE" matches snapshot 1`] = `
Object {
  "data": Object {
    "getNode": Object {
      "node": Object {
        "alias": "string",
        "capacity": "1000",
        "channel_count": 1000,
        "color": "string",
        "updated_at": "2011-10-05T14:48:00.000Z",
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_NODE_INFO" matches snapshot 1`] = `
Object {
  "data": Object {
    "getNodeInfo": Object {
      "active_channels_count": 1,
      "alias": "TestNode",
      "chains": Array [
        "abc",
        "def",
      ],
      "closed_channels_count": 3,
      "color": "color",
      "is_synced_to_chain": true,
      "peers_count": 1,
      "pending_channels_count": 3,
      "public_key": "key",
      "uris": Array [
        "uri",
        "uri2",
      ],
      "version": "version",
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_PEERS" matches snapshot 1`] = `
Object {
  "data": Object {
    "getPeers": Array [
      Object {
        "bytes_received": 1000,
        "bytes_sent": 1000,
        "is_inbound": true,
        "is_sync_peer": true,
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "capacity": "1000",
            "channel_count": 1000,
            "color": "string",
            "updated_at": "2011-10-05T14:48:00.000Z",
          },
        },
        "ping_time": 1000,
        "public_key": "abc",
        "socket": "string",
        "tokens_received": 1000,
        "tokens_sent": 1000,
      },
      Object {
        "bytes_received": 1000,
        "bytes_sent": 1000,
        "is_inbound": true,
        "is_sync_peer": true,
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "capacity": "1000",
            "channel_count": 1000,
            "color": "string",
            "updated_at": "2011-10-05T14:48:00.000Z",
          },
        },
        "ping_time": 1000,
        "public_key": "def",
        "socket": "string",
        "tokens_received": 1000,
        "tokens_sent": 1000,
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_PENDING_CHANNELS" matches snapshot 1`] = `
Object {
  "data": Object {
    "getPendingChannels": Array [
      Object {
        "close_transaction_id": "string",
        "is_active": true,
        "is_closing": true,
        "is_opening": true,
        "is_timelocked": true,
        "local_balance": 1000,
        "local_reserve": 1000,
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "capacity": "1000",
            "channel_count": 1000,
            "color": "string",
            "updated_at": "2011-10-05T14:48:00.000Z",
          },
        },
        "partner_public_key": "string",
        "received": 1000,
        "remote_balance": 1000,
        "remote_reserve": 1000,
        "sent": 1000,
        "timelock_blocks": null,
        "timelock_expiration": 1000,
        "transaction_fee": 1000,
        "transaction_id": "string",
        "transaction_vout": 1000,
      },
      Object {
        "close_transaction_id": "string",
        "is_active": true,
        "is_closing": true,
        "is_opening": true,
        "is_timelocked": true,
        "local_balance": 1000,
        "local_reserve": 1000,
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "capacity": "1000",
            "channel_count": 1000,
            "color": "string",
            "updated_at": "2011-10-05T14:48:00.000Z",
          },
        },
        "partner_public_key": "string",
        "received": 1000,
        "remote_balance": 1000,
        "remote_reserve": 1000,
        "sent": 1000,
        "timelock_blocks": null,
        "timelock_expiration": 1000,
        "transaction_fee": 1000,
        "transaction_id": "string",
        "transaction_vout": 1000,
      },
      Object {
        "close_transaction_id": "string",
        "is_active": true,
        "is_closing": true,
        "is_opening": true,
        "is_timelocked": true,
        "local_balance": 1000,
        "local_reserve": 1000,
        "partner_node_info": Object {
          "node": Object {
            "alias": "string",
            "capacity": "1000",
            "channel_count": 1000,
            "color": "string",
            "updated_at": "2011-10-05T14:48:00.000Z",
          },
        },
        "partner_public_key": "string",
        "received": 1000,
        "remote_balance": 1000,
        "remote_reserve": 1000,
        "sent": 1000,
        "timelock_blocks": null,
        "timelock_expiration": 1000,
        "transaction_fee": 1000,
        "transaction_id": "string",
        "transaction_vout": 1000,
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_SERVER_ACCOUNTS" matches snapshot 1`] = `
Object {
  "data": Object {
    "getServerAccounts": Array [
      Object {
        "id": "accountID",
        "loggedIn": false,
        "name": "account",
        "type": "server",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_TIME_HEALTH" matches snapshot 1`] = `
Object {
  "data": Object {
    "getTimeHealth": Object {
      "channels": Array [
        Object {
          "id": "100x1x1",
          "monitoredDowntime": 1,
          "monitoredTime": 2,
          "monitoredUptime": 1,
          "partner": Object {
            "node": Object {
              "alias": "string",
            },
          },
          "score": 50,
          "significant": false,
        },
        Object {
          "id": "100x1x1",
          "monitoredDowntime": 1,
          "monitoredTime": 2,
          "monitoredUptime": 1,
          "partner": Object {
            "node": Object {
              "alias": "string",
            },
          },
          "score": 50,
          "significant": false,
        },
        Object {
          "id": "100x1x1",
          "monitoredDowntime": 1,
          "monitoredTime": 2,
          "monitoredUptime": 1,
          "partner": Object {
            "node": Object {
              "alias": "string",
            },
          },
          "score": 50,
          "significant": false,
        },
      ],
      "score": 50,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_UTXOS" matches snapshot 1`] = `
Object {
  "data": Object {
    "getUtxos": Array [
      Object {
        "address": "string",
        "address_format": "string",
        "confirmation_count": 1000,
        "output_script": "string",
        "tokens": 1000,
        "transaction_id": "string",
        "transaction_vout": 1000,
      },
      Object {
        "address": "string",
        "address_format": "string",
        "confirmation_count": 1000,
        "output_script": "string",
        "tokens": 1000,
        "transaction_id": "string",
        "transaction_vout": 1000,
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_VOLUME_HEALTH" matches snapshot 1`] = `
Object {
  "data": Object {
    "getVolumeHealth": Object {
      "channels": Array [
        Object {
          "averageVolumeNormalized": "0",
          "id": "100x1x1",
          "partner": Object {
            "node": Object {
              "alias": "string",
            },
          },
          "score": 0,
          "volumeNormalized": "0",
        },
        Object {
          "averageVolumeNormalized": "0",
          "id": "100x1x1",
          "partner": Object {
            "node": Object {
              "alias": "string",
            },
          },
          "score": 0,
          "volumeNormalized": "0",
        },
        Object {
          "averageVolumeNormalized": "0",
          "id": "100x1x1",
          "partner": Object {
            "node": Object {
              "alias": "string",
            },
          },
          "score": 0,
          "volumeNormalized": "0",
        },
      ],
      "score": 0,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "GET_WALLET_INFO" matches snapshot 1`] = `
Object {
  "data": Object {
    "getWalletInfo": Object {
      "build_tags": Array [
        "string",
        "string",
      ],
      "commit_hash": "string",
      "is_autopilotrpc_enabled": true,
      "is_chainrpc_enabled": true,
      "is_invoicesrpc_enabled": true,
      "is_signrpc_enabled": true,
      "is_walletrpc_enabled": true,
      "is_watchtowerrpc_enabled": true,
      "is_wtclientrpc_enabled": true,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "RECOVER_FUNDS" matches snapshot 1`] = `
Object {
  "data": Object {
    "recoverFunds": true,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "SIGN_MESSAGE" matches snapshot 1`] = `
Object {
  "data": Object {
    "signMessage": "signature",
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "VERIFY_BACKUPS" matches snapshot 1`] = `
Object {
  "data": Object {
    "verifyBackups": true,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Query tests "VERIFY_MESSAGE" matches snapshot 1`] = `
Object {
  "data": Object {
    "verifyMessage": "abc",
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;
